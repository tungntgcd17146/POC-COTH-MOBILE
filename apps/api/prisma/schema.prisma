// COTH Mobile API - Prisma Schema
// This schema uses a SEPARATE database from EasyMate (buela-all)
// Database: coth_mobile
// Simple structure focusing on User management and Authentication

datasource postgres {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_DATABASE_URL")
  extensions = [pg_trgm, vector]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "metrics", "nativeDistinct", "omitApi", "relationJoins", "prismaSchemaFolder", "postgresqlExtensions", "tracing"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

// Enums
enum EnumUserRole {
  PlatformAdmin
  AccountOwner
  AppAdmin
  AppUser
}

enum EnumUserStatus {
  Active
  Deactivated
  Suspended
  Pending
  Invited
}

enum EnumRegistrationReferralChannel {
  PeerReferral
  LinkedIn
  Facebook
  Youtube
  Twitter
  Forum
  SearchEngine
  VC
  Podcast
  News
  Other
}

// Core Models
model User {
  id                             BigInt                              @id @default(autoincrement())
  uuid                           String                              @default(uuid())
  createdAt                      DateTime?                           @default(now())
  updatedAt                      DateTime?                           @updatedAt
  username                       String
  email                          String                              @unique
  firstName                      String?
  lastName                       String?
  password                       String
  roles                          EnumUserRole[]
  status                         EnumUserStatus?                     @default(Deactivated)
  completedWelcome               Boolean?                            @default(false)
  phone                          String?
  refreshToken                   String?
  lastLoginTime                  DateTime?
  passwordResetRequired          Boolean?                            @default(false)
  deletedAt                      DateTime?
  completedAdditionalInformation Boolean?                            @default(false)
  referralChannels               EnumRegistrationReferralChannel[]
  metadata                       Json?

  // Relations
  authProviders                  AuthProvider[]

  // Indices
  @@unique([uuid])
  @@index([email(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([firstName(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([lastName(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([roles(ops: ArrayOps)], type: Gin)
  @@index([status])
  @@index([metadata(ops: JsonbOps)], type: Gin)
}

model AuthProvider {
  id           BigInt    @id @default(autoincrement())
  uuid         String    @default(uuid())
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  userId       BigInt
  provider     String
  providerId   String
  providerData Json?

  // Relations
  user         User      @relation(fields: [userId], references: [id])

  // Indices
  @@unique([uuid])
  @@unique([userId, provider])
  @@index([provider])
  @@index([providerId])
}

model Role {
  id          BigInt    @id @default(autoincrement())
  uuid        String    @default(uuid())
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  name        String    @unique
  description String?
  permissions Json?
  deletedAt   DateTime?

  // Indices
  @@unique([uuid])
  @@index([name])
  @@index([permissions(ops: JsonbOps)], type: Gin)
}

